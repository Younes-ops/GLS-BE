/**
 * generated by Xtext 2.17.1
 */
package fr.enseeiht.gAME.impl;

import fr.enseeiht.gAME.Condition;
import fr.enseeiht.gAME.Connaissance;
import fr.enseeiht.gAME.Echange;
import fr.enseeiht.gAME.GAMEPackage;
import fr.enseeiht.gAME.Objet;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Echange</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.enseeiht.gAME.impl.EchangeImpl#getObjetsDonne <em>Objets Donne</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.EchangeImpl#getObjetsPris <em>Objets Pris</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.EchangeImpl#getConnaissances <em>Connaissances</em>}</li>
 *   <li>{@link fr.enseeiht.gAME.impl.EchangeImpl#getConditions <em>Conditions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EchangeImpl extends MinimalEObjectImpl.Container implements Echange
{
  /**
   * The cached value of the '{@link #getObjetsDonne() <em>Objets Donne</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjetsDonne()
   * @generated
   * @ordered
   */
  protected EList<Objet> objetsDonne;

  /**
   * The cached value of the '{@link #getObjetsPris() <em>Objets Pris</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjetsPris()
   * @generated
   * @ordered
   */
  protected EList<Objet> objetsPris;

  /**
   * The cached value of the '{@link #getConnaissances() <em>Connaissances</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnaissances()
   * @generated
   * @ordered
   */
  protected EList<Connaissance> connaissances;

  /**
   * The cached value of the '{@link #getConditions() <em>Conditions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConditions()
   * @generated
   * @ordered
   */
  protected EList<Condition> conditions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EchangeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GAMEPackage.Literals.ECHANGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Objet> getObjetsDonne()
  {
    if (objetsDonne == null)
    {
      objetsDonne = new EObjectResolvingEList<Objet>(Objet.class, this, GAMEPackage.ECHANGE__OBJETS_DONNE);
    }
    return objetsDonne;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Objet> getObjetsPris()
  {
    if (objetsPris == null)
    {
      objetsPris = new EObjectResolvingEList<Objet>(Objet.class, this, GAMEPackage.ECHANGE__OBJETS_PRIS);
    }
    return objetsPris;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Connaissance> getConnaissances()
  {
    if (connaissances == null)
    {
      connaissances = new EObjectResolvingEList<Connaissance>(Connaissance.class, this, GAMEPackage.ECHANGE__CONNAISSANCES);
    }
    return connaissances;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Condition> getConditions()
  {
    if (conditions == null)
    {
      conditions = new EObjectContainmentEList<Condition>(Condition.class, this, GAMEPackage.ECHANGE__CONDITIONS);
    }
    return conditions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GAMEPackage.ECHANGE__CONDITIONS:
        return ((InternalEList<?>)getConditions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GAMEPackage.ECHANGE__OBJETS_DONNE:
        return getObjetsDonne();
      case GAMEPackage.ECHANGE__OBJETS_PRIS:
        return getObjetsPris();
      case GAMEPackage.ECHANGE__CONNAISSANCES:
        return getConnaissances();
      case GAMEPackage.ECHANGE__CONDITIONS:
        return getConditions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GAMEPackage.ECHANGE__OBJETS_DONNE:
        getObjetsDonne().clear();
        getObjetsDonne().addAll((Collection<? extends Objet>)newValue);
        return;
      case GAMEPackage.ECHANGE__OBJETS_PRIS:
        getObjetsPris().clear();
        getObjetsPris().addAll((Collection<? extends Objet>)newValue);
        return;
      case GAMEPackage.ECHANGE__CONNAISSANCES:
        getConnaissances().clear();
        getConnaissances().addAll((Collection<? extends Connaissance>)newValue);
        return;
      case GAMEPackage.ECHANGE__CONDITIONS:
        getConditions().clear();
        getConditions().addAll((Collection<? extends Condition>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GAMEPackage.ECHANGE__OBJETS_DONNE:
        getObjetsDonne().clear();
        return;
      case GAMEPackage.ECHANGE__OBJETS_PRIS:
        getObjetsPris().clear();
        return;
      case GAMEPackage.ECHANGE__CONNAISSANCES:
        getConnaissances().clear();
        return;
      case GAMEPackage.ECHANGE__CONDITIONS:
        getConditions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GAMEPackage.ECHANGE__OBJETS_DONNE:
        return objetsDonne != null && !objetsDonne.isEmpty();
      case GAMEPackage.ECHANGE__OBJETS_PRIS:
        return objetsPris != null && !objetsPris.isEmpty();
      case GAMEPackage.ECHANGE__CONNAISSANCES:
        return connaissances != null && !connaissances.isEmpty();
      case GAMEPackage.ECHANGE__CONDITIONS:
        return conditions != null && !conditions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //EchangeImpl
