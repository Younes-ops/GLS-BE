/*
 * generated by Xtext 2.17.1
 */
package fr.enseeiht.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GAMEGrammarAccess extends AbstractGrammarElementFinder {
	
	public class JeuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Jeu");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJeuKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExplorateurAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExplorateurExplorateurParserRuleCall_3_0 = (RuleCall)cExplorateurAssignment_3.eContents().get(0);
		private final Assignment cLieuxAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLieuxLieuParserRuleCall_4_0 = (RuleCall)cLieuxAssignment_4.eContents().get(0);
		private final Assignment cObjetsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cObjetsObjetParserRuleCall_5_0 = (RuleCall)cObjetsAssignment_5.eContents().get(0);
		private final Assignment cConnaissancesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConnaissancesConnaissanceParserRuleCall_6_0 = (RuleCall)cConnaissancesAssignment_6.eContents().get(0);
		private final Assignment cPersonnesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPersonnesPersonneParserRuleCall_7_0 = (RuleCall)cPersonnesAssignment_7.eContents().get(0);
		private final Assignment cCheminsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCheminsCheminParserRuleCall_8_0 = (RuleCall)cCheminsAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Jeu:
		//	'jeu' name=ID '{'
		//	explorateur=Explorateur
		//	lieux+=Lieu*
		//	Objets+=Objet*
		//	Connaissances+=Connaissance*
		//	personnes+=Personne*
		//	chemins+=Chemin*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'jeu' name=ID '{' explorateur=Explorateur lieux+=Lieu* Objets+=Objet* Connaissances+=Connaissance* personnes+=Personne*
		//chemins+=Chemin* '}'
		public Group getGroup() { return cGroup; }
		
		//'jeu'
		public Keyword getJeuKeyword_0() { return cJeuKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//explorateur=Explorateur
		public Assignment getExplorateurAssignment_3() { return cExplorateurAssignment_3; }
		
		//Explorateur
		public RuleCall getExplorateurExplorateurParserRuleCall_3_0() { return cExplorateurExplorateurParserRuleCall_3_0; }
		
		//lieux+=Lieu*
		public Assignment getLieuxAssignment_4() { return cLieuxAssignment_4; }
		
		//Lieu
		public RuleCall getLieuxLieuParserRuleCall_4_0() { return cLieuxLieuParserRuleCall_4_0; }
		
		//Objets+=Objet*
		public Assignment getObjetsAssignment_5() { return cObjetsAssignment_5; }
		
		//Objet
		public RuleCall getObjetsObjetParserRuleCall_5_0() { return cObjetsObjetParserRuleCall_5_0; }
		
		//Connaissances+=Connaissance*
		public Assignment getConnaissancesAssignment_6() { return cConnaissancesAssignment_6; }
		
		//Connaissance
		public RuleCall getConnaissancesConnaissanceParserRuleCall_6_0() { return cConnaissancesConnaissanceParserRuleCall_6_0; }
		
		//personnes+=Personne*
		public Assignment getPersonnesAssignment_7() { return cPersonnesAssignment_7; }
		
		//Personne
		public RuleCall getPersonnesPersonneParserRuleCall_7_0() { return cPersonnesPersonneParserRuleCall_7_0; }
		
		//chemins+=Chemin*
		public Assignment getCheminsAssignment_8() { return cCheminsAssignment_8; }
		
		//Chemin
		public RuleCall getCheminsCheminParserRuleCall_8_0() { return cCheminsCheminParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class CheminElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Chemin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCheminKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionsDescriptionParserRuleCall_3_0 = (RuleCall)cDescriptionsAssignment_3.eContents().get(0);
		private final Keyword cDeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDepartAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cDepartLieuCrossReference_5_0 = (CrossReference)cDepartAssignment_5.eContents().get(0);
		private final RuleCall cDepartLieuIDTerminalRuleCall_5_0_1 = (RuleCall)cDepartLieuCrossReference_5_0.eContents().get(1);
		private final Keyword cVersKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cArriveAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cArriveLieuCrossReference_7_0 = (CrossReference)cArriveAssignment_7.eContents().get(0);
		private final RuleCall cArriveLieuIDTerminalRuleCall_7_0_1 = (RuleCall)cArriveLieuCrossReference_7_0.eContents().get(1);
		private final Assignment cVisibiliteAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cVisibiliteVisibiliteEnumRuleCall_8_0 = (RuleCall)cVisibiliteAssignment_8.eContents().get(0);
		private final Keyword cSiKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionsVisibiliteAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionsVisibiliteConditionParserRuleCall_10_0 = (RuleCall)cConditionsVisibiliteAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Chemin:
		//	'chemin' name=ID '{'
		//	descriptions=Description?
		//	'de' depart=[Lieu]
		//	'vers' arrive=[Lieu] visibilite=Visibilite 'si' conditionsVisibilite=Condition
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'chemin' name=ID '{' descriptions=Description? 'de' depart=[Lieu] 'vers' arrive=[Lieu] visibilite=Visibilite 'si'
		//conditionsVisibilite=Condition '}'
		public Group getGroup() { return cGroup; }
		
		//'chemin'
		public Keyword getCheminKeyword_0() { return cCheminKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//descriptions=Description?
		public Assignment getDescriptionsAssignment_3() { return cDescriptionsAssignment_3; }
		
		//Description
		public RuleCall getDescriptionsDescriptionParserRuleCall_3_0() { return cDescriptionsDescriptionParserRuleCall_3_0; }
		
		//'de'
		public Keyword getDeKeyword_4() { return cDeKeyword_4; }
		
		//depart=[Lieu]
		public Assignment getDepartAssignment_5() { return cDepartAssignment_5; }
		
		//[Lieu]
		public CrossReference getDepartLieuCrossReference_5_0() { return cDepartLieuCrossReference_5_0; }
		
		//ID
		public RuleCall getDepartLieuIDTerminalRuleCall_5_0_1() { return cDepartLieuIDTerminalRuleCall_5_0_1; }
		
		//'vers'
		public Keyword getVersKeyword_6() { return cVersKeyword_6; }
		
		//arrive=[Lieu]
		public Assignment getArriveAssignment_7() { return cArriveAssignment_7; }
		
		//[Lieu]
		public CrossReference getArriveLieuCrossReference_7_0() { return cArriveLieuCrossReference_7_0; }
		
		//ID
		public RuleCall getArriveLieuIDTerminalRuleCall_7_0_1() { return cArriveLieuIDTerminalRuleCall_7_0_1; }
		
		//visibilite=Visibilite
		public Assignment getVisibiliteAssignment_8() { return cVisibiliteAssignment_8; }
		
		//Visibilite
		public RuleCall getVisibiliteVisibiliteEnumRuleCall_8_0() { return cVisibiliteVisibiliteEnumRuleCall_8_0; }
		
		//'si'
		public Keyword getSiKeyword_9() { return cSiKeyword_9; }
		
		//conditionsVisibilite=Condition
		public Assignment getConditionsVisibiliteAssignment_10() { return cConditionsVisibiliteAssignment_10; }
		
		//Condition
		public RuleCall getConditionsVisibiliteConditionParserRuleCall_10_0() { return cConditionsVisibiliteConditionParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class PersonneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Personne");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPersonneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionsDescriptionParserRuleCall_3_0 = (RuleCall)cDescriptionsAssignment_3.eContents().get(0);
		private final Assignment cInteractionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInteractionInteractionParserRuleCall_4_0 = (RuleCall)cInteractionAssignment_4.eContents().get(0);
		private final Assignment cVisibiliteAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVisibiliteVisibiliteEnumRuleCall_5_0 = (RuleCall)cVisibiliteAssignment_5.eContents().get(0);
		private final Keyword cSiKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cConditionsVisibiliteAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cConditionsVisibiliteConditionParserRuleCall_7_0 = (RuleCall)cConditionsVisibiliteAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Personne:
		//	'personne' name=ID '{'
		//	descriptions=Description
		//	interaction=Interaction
		//	visibilite=Visibilite 'si' conditionsVisibilite=Condition
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'personne' name=ID '{' descriptions=Description interaction=Interaction visibilite=Visibilite 'si'
		//conditionsVisibilite=Condition '}'
		public Group getGroup() { return cGroup; }
		
		//'personne'
		public Keyword getPersonneKeyword_0() { return cPersonneKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//descriptions=Description
		public Assignment getDescriptionsAssignment_3() { return cDescriptionsAssignment_3; }
		
		//Description
		public RuleCall getDescriptionsDescriptionParserRuleCall_3_0() { return cDescriptionsDescriptionParserRuleCall_3_0; }
		
		//interaction=Interaction
		public Assignment getInteractionAssignment_4() { return cInteractionAssignment_4; }
		
		//Interaction
		public RuleCall getInteractionInteractionParserRuleCall_4_0() { return cInteractionInteractionParserRuleCall_4_0; }
		
		//visibilite=Visibilite
		public Assignment getVisibiliteAssignment_5() { return cVisibiliteAssignment_5; }
		
		//Visibilite
		public RuleCall getVisibiliteVisibiliteEnumRuleCall_5_0() { return cVisibiliteVisibiliteEnumRuleCall_5_0; }
		
		//'si'
		public Keyword getSiKeyword_6() { return cSiKeyword_6; }
		
		//conditionsVisibilite=Condition
		public Assignment getConditionsVisibiliteAssignment_7() { return cConditionsVisibiliteAssignment_7; }
		
		//Condition
		public RuleCall getConditionsVisibiliteConditionParserRuleCall_7_0() { return cConditionsVisibiliteConditionParserRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class InteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Interaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInteractionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cChoixAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cChoixChoixParserRuleCall_2_0 = (RuleCall)cChoixAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Interaction:
		//	'interaction' '{'
		//	choix+=Choix+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'interaction' '{' choix+=Choix+ '}'
		public Group getGroup() { return cGroup; }
		
		//'interaction'
		public Keyword getInteractionKeyword_0() { return cInteractionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//choix+=Choix+
		public Assignment getChoixAssignment_2() { return cChoixAssignment_2; }
		
		//Choix
		public RuleCall getChoixChoixParserRuleCall_2_0() { return cChoixChoixParserRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ChoixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Choix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Choix:
		//	'choix' name=ID '{'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'choix' name=ID '{' '}'
		public Group getGroup() { return cGroup; }
		
		//'choix'
		public Keyword getChoixKeyword_0() { return cChoixKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ObjetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Objet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionsDescriptionParserRuleCall_3_0 = (RuleCall)cDescriptionsAssignment_3.eContents().get(0);
		private final Keyword cTailleKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTailleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTailleINTTerminalRuleCall_5_0 = (RuleCall)cTailleAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Objet:
		//	'objet' name=ID '{'
		//	descriptions+=Description?
		//	'taille' taille=INT
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'objet' name=ID '{' descriptions+=Description? 'taille' taille=INT '}'
		public Group getGroup() { return cGroup; }
		
		//'objet'
		public Keyword getObjetKeyword_0() { return cObjetKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//descriptions+=Description?
		public Assignment getDescriptionsAssignment_3() { return cDescriptionsAssignment_3; }
		
		//Description
		public RuleCall getDescriptionsDescriptionParserRuleCall_3_0() { return cDescriptionsDescriptionParserRuleCall_3_0; }
		
		//'taille'
		public Keyword getTailleKeyword_4() { return cTailleKeyword_4; }
		
		//taille=INT
		public Assignment getTailleAssignment_5() { return cTailleAssignment_5; }
		
		//INT
		public RuleCall getTailleINTTerminalRuleCall_5_0() { return cTailleINTTerminalRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Description");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDescriptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextSTRINGTerminalRuleCall_2_0 = (RuleCall)cTextAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Description:
		//	'description' '{'
		//	text=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'description' '{' text=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'description'
		public Keyword getDescriptionKeyword_0() { return cDescriptionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//text=STRING
		public Assignment getTextAssignment_2() { return cTextAssignment_2; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_2_0() { return cTextSTRINGTerminalRuleCall_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Condition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConditionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Condition:
		//	'condition' name=ID '{' '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'condition' name=ID '{' '}'
		public Group getGroup() { return cGroup; }
		
		//'condition'
		public Keyword getConditionKeyword_0() { return cConditionKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ConnaissanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Connaissance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnaissanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Connaissance:
		//	'connaissance' name=ID '{' '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'connaissance' name=ID '{' '}'
		public Group getGroup() { return cGroup; }
		
		//'connaissance'
		public Keyword getConnaissanceKeyword_0() { return cConnaissanceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ExplorateurElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Explorateur");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExplorateurKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTailleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTailleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTailleINTTerminalRuleCall_4_0 = (RuleCall)cTailleAssignment_4.eContents().get(0);
		private final Keyword cInventaireOKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cObjetsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cObjetsObjetCrossReference_6_0 = (CrossReference)cObjetsAssignment_6.eContents().get(0);
		private final RuleCall cObjetsObjetIDTerminalRuleCall_6_0_1 = (RuleCall)cObjetsObjetCrossReference_6_0.eContents().get(1);
		private final Keyword cInventaireCKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cConnaissancesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cConnaissancesConnaissanceCrossReference_8_0 = (CrossReference)cConnaissancesAssignment_8.eContents().get(0);
		private final RuleCall cConnaissancesConnaissanceIDTerminalRuleCall_8_0_1 = (RuleCall)cConnaissancesConnaissanceCrossReference_8_0.eContents().get(1);
		private final Keyword cLocalisationKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cLocalisationAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cLocalisationLieuCrossReference_10_0 = (CrossReference)cLocalisationAssignment_10.eContents().get(0);
		private final RuleCall cLocalisationLieuIDTerminalRuleCall_10_0_1 = (RuleCall)cLocalisationLieuCrossReference_10_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Explorateur:
		//	'explorateur' name=ID '{'
		//	'taille' taille=INT
		//	'inventaireO' objets+=[Objet]*
		//	'inventaireC' connaissances+=[Connaissance]*
		//	'localisation' localisation=[Lieu]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'explorateur' name=ID '{' 'taille' taille=INT 'inventaireO' objets+=[Objet]* 'inventaireC'
		//connaissances+=[Connaissance]* 'localisation' localisation=[Lieu] '}'
		public Group getGroup() { return cGroup; }
		
		//'explorateur'
		public Keyword getExplorateurKeyword_0() { return cExplorateurKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'taille'
		public Keyword getTailleKeyword_3() { return cTailleKeyword_3; }
		
		//taille=INT
		public Assignment getTailleAssignment_4() { return cTailleAssignment_4; }
		
		//INT
		public RuleCall getTailleINTTerminalRuleCall_4_0() { return cTailleINTTerminalRuleCall_4_0; }
		
		//'inventaireO'
		public Keyword getInventaireOKeyword_5() { return cInventaireOKeyword_5; }
		
		//objets+=[Objet]*
		public Assignment getObjetsAssignment_6() { return cObjetsAssignment_6; }
		
		//[Objet]
		public CrossReference getObjetsObjetCrossReference_6_0() { return cObjetsObjetCrossReference_6_0; }
		
		//ID
		public RuleCall getObjetsObjetIDTerminalRuleCall_6_0_1() { return cObjetsObjetIDTerminalRuleCall_6_0_1; }
		
		//'inventaireC'
		public Keyword getInventaireCKeyword_7() { return cInventaireCKeyword_7; }
		
		//connaissances+=[Connaissance]*
		public Assignment getConnaissancesAssignment_8() { return cConnaissancesAssignment_8; }
		
		//[Connaissance]
		public CrossReference getConnaissancesConnaissanceCrossReference_8_0() { return cConnaissancesConnaissanceCrossReference_8_0; }
		
		//ID
		public RuleCall getConnaissancesConnaissanceIDTerminalRuleCall_8_0_1() { return cConnaissancesConnaissanceIDTerminalRuleCall_8_0_1; }
		
		//'localisation'
		public Keyword getLocalisationKeyword_9() { return cLocalisationKeyword_9; }
		
		//localisation=[Lieu]
		public Assignment getLocalisationAssignment_10() { return cLocalisationAssignment_10; }
		
		//[Lieu]
		public CrossReference getLocalisationLieuCrossReference_10_0() { return cLocalisationLieuCrossReference_10_0; }
		
		//ID
		public RuleCall getLocalisationLieuIDTerminalRuleCall_10_0_1() { return cLocalisationLieuIDTerminalRuleCall_10_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class LieuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Lieu");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLieuKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionsDescriptionParserRuleCall_3_0 = (RuleCall)cDescriptionsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cObjetsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cObjetsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cObjetsObjetCrossReference_4_1_0 = (CrossReference)cObjetsAssignment_4_1.eContents().get(0);
		private final RuleCall cObjetsObjetIDTerminalRuleCall_4_1_0_1 = (RuleCall)cObjetsObjetCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cConnaissancesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cConnaissancesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cConnaissancesConnaissanceCrossReference_5_1_0 = (CrossReference)cConnaissancesAssignment_5_1.eContents().get(0);
		private final RuleCall cConnaissancesConnaissanceIDTerminalRuleCall_5_1_0_1 = (RuleCall)cConnaissancesConnaissanceCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPersonnesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cPersonnesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cPersonnesPersonneCrossReference_6_1_0 = (CrossReference)cPersonnesAssignment_6_1.eContents().get(0);
		private final RuleCall cPersonnesPersonneIDTerminalRuleCall_6_1_0_1 = (RuleCall)cPersonnesPersonneCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Lieu:
		//	'lieu' name=ID '{'
		//	descriptions+=Description? ('objets' objets+=[Objet])* ('connaissances' connaissances+=[Connaissance])* ('personnes'
		//	personnes+=[Personne])*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'lieu' name=ID '{' descriptions+=Description? ('objets' objets+=[Objet])* ('connaissances'
		//connaissances+=[Connaissance])* ('personnes' personnes+=[Personne])* '}'
		public Group getGroup() { return cGroup; }
		
		//'lieu'
		public Keyword getLieuKeyword_0() { return cLieuKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//descriptions+=Description?
		public Assignment getDescriptionsAssignment_3() { return cDescriptionsAssignment_3; }
		
		//Description
		public RuleCall getDescriptionsDescriptionParserRuleCall_3_0() { return cDescriptionsDescriptionParserRuleCall_3_0; }
		
		//('objets' objets+=[Objet])*
		public Group getGroup_4() { return cGroup_4; }
		
		//'objets'
		public Keyword getObjetsKeyword_4_0() { return cObjetsKeyword_4_0; }
		
		//objets+=[Objet]
		public Assignment getObjetsAssignment_4_1() { return cObjetsAssignment_4_1; }
		
		//[Objet]
		public CrossReference getObjetsObjetCrossReference_4_1_0() { return cObjetsObjetCrossReference_4_1_0; }
		
		//ID
		public RuleCall getObjetsObjetIDTerminalRuleCall_4_1_0_1() { return cObjetsObjetIDTerminalRuleCall_4_1_0_1; }
		
		//('connaissances' connaissances+=[Connaissance])*
		public Group getGroup_5() { return cGroup_5; }
		
		//'connaissances'
		public Keyword getConnaissancesKeyword_5_0() { return cConnaissancesKeyword_5_0; }
		
		//connaissances+=[Connaissance]
		public Assignment getConnaissancesAssignment_5_1() { return cConnaissancesAssignment_5_1; }
		
		//[Connaissance]
		public CrossReference getConnaissancesConnaissanceCrossReference_5_1_0() { return cConnaissancesConnaissanceCrossReference_5_1_0; }
		
		//ID
		public RuleCall getConnaissancesConnaissanceIDTerminalRuleCall_5_1_0_1() { return cConnaissancesConnaissanceIDTerminalRuleCall_5_1_0_1; }
		
		//('personnes' personnes+=[Personne])*
		public Group getGroup_6() { return cGroup_6; }
		
		//'personnes'
		public Keyword getPersonnesKeyword_6_0() { return cPersonnesKeyword_6_0; }
		
		//personnes+=[Personne]
		public Assignment getPersonnesAssignment_6_1() { return cPersonnesAssignment_6_1; }
		
		//[Personne]
		public CrossReference getPersonnesPersonneCrossReference_6_1_0() { return cPersonnesPersonneCrossReference_6_1_0; }
		
		//ID
		public RuleCall getPersonnesPersonneIDTerminalRuleCall_6_1_0_1() { return cPersonnesPersonneIDTerminalRuleCall_6_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	
	public class VisibiliteElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.enseeiht.GAME.Visibilite");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVisibleEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVisibleVisibleKeyword_0_0 = (Keyword)cVisibleEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cInvisibleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cInvisibleInvisibleKeyword_1_0 = (Keyword)cInvisibleEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Visibilite:
		//	Visible='visible'
		//	| Invisible='invisible';
		public EnumRule getRule() { return rule; }
		
		//Visible='visible' | Invisible='invisible'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Visible='visible'
		public EnumLiteralDeclaration getVisibleEnumLiteralDeclaration_0() { return cVisibleEnumLiteralDeclaration_0; }
		
		//'visible'
		public Keyword getVisibleVisibleKeyword_0_0() { return cVisibleVisibleKeyword_0_0; }
		
		//Invisible='invisible'
		public EnumLiteralDeclaration getInvisibleEnumLiteralDeclaration_1() { return cInvisibleEnumLiteralDeclaration_1; }
		
		//'invisible'
		public Keyword getInvisibleInvisibleKeyword_1_0() { return cInvisibleInvisibleKeyword_1_0; }
	}
	
	private final JeuElements pJeu;
	private final CheminElements pChemin;
	private final PersonneElements pPersonne;
	private final InteractionElements pInteraction;
	private final ChoixElements pChoix;
	private final ObjetElements pObjet;
	private final DescriptionElements pDescription;
	private final ConditionElements pCondition;
	private final ConnaissanceElements pConnaissance;
	private final ExplorateurElements pExplorateur;
	private final LieuElements pLieu;
	private final VisibiliteElements eVisibilite;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GAMEGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pJeu = new JeuElements();
		this.pChemin = new CheminElements();
		this.pPersonne = new PersonneElements();
		this.pInteraction = new InteractionElements();
		this.pChoix = new ChoixElements();
		this.pObjet = new ObjetElements();
		this.pDescription = new DescriptionElements();
		this.pCondition = new ConditionElements();
		this.pConnaissance = new ConnaissanceElements();
		this.pExplorateur = new ExplorateurElements();
		this.pLieu = new LieuElements();
		this.eVisibilite = new VisibiliteElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.enseeiht.GAME".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Jeu:
	//	'jeu' name=ID '{'
	//	explorateur=Explorateur
	//	lieux+=Lieu*
	//	Objets+=Objet*
	//	Connaissances+=Connaissance*
	//	personnes+=Personne*
	//	chemins+=Chemin*
	//	'}';
	public JeuElements getJeuAccess() {
		return pJeu;
	}
	
	public ParserRule getJeuRule() {
		return getJeuAccess().getRule();
	}
	
	//Chemin:
	//	'chemin' name=ID '{'
	//	descriptions=Description?
	//	'de' depart=[Lieu]
	//	'vers' arrive=[Lieu] visibilite=Visibilite 'si' conditionsVisibilite=Condition
	//	'}';
	public CheminElements getCheminAccess() {
		return pChemin;
	}
	
	public ParserRule getCheminRule() {
		return getCheminAccess().getRule();
	}
	
	//Personne:
	//	'personne' name=ID '{'
	//	descriptions=Description
	//	interaction=Interaction
	//	visibilite=Visibilite 'si' conditionsVisibilite=Condition
	//	'}';
	public PersonneElements getPersonneAccess() {
		return pPersonne;
	}
	
	public ParserRule getPersonneRule() {
		return getPersonneAccess().getRule();
	}
	
	//Interaction:
	//	'interaction' '{'
	//	choix+=Choix+
	//	'}';
	public InteractionElements getInteractionAccess() {
		return pInteraction;
	}
	
	public ParserRule getInteractionRule() {
		return getInteractionAccess().getRule();
	}
	
	//Choix:
	//	'choix' name=ID '{'
	//	'}';
	public ChoixElements getChoixAccess() {
		return pChoix;
	}
	
	public ParserRule getChoixRule() {
		return getChoixAccess().getRule();
	}
	
	//Objet:
	//	'objet' name=ID '{'
	//	descriptions+=Description?
	//	'taille' taille=INT
	//	'}';
	public ObjetElements getObjetAccess() {
		return pObjet;
	}
	
	public ParserRule getObjetRule() {
		return getObjetAccess().getRule();
	}
	
	//Description:
	//	'description' '{'
	//	text=STRING
	//	'}';
	public DescriptionElements getDescriptionAccess() {
		return pDescription;
	}
	
	public ParserRule getDescriptionRule() {
		return getDescriptionAccess().getRule();
	}
	
	//Condition:
	//	'condition' name=ID '{' '}';
	public ConditionElements getConditionAccess() {
		return pCondition;
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//Connaissance:
	//	'connaissance' name=ID '{' '}';
	public ConnaissanceElements getConnaissanceAccess() {
		return pConnaissance;
	}
	
	public ParserRule getConnaissanceRule() {
		return getConnaissanceAccess().getRule();
	}
	
	//Explorateur:
	//	'explorateur' name=ID '{'
	//	'taille' taille=INT
	//	'inventaireO' objets+=[Objet]*
	//	'inventaireC' connaissances+=[Connaissance]*
	//	'localisation' localisation=[Lieu]
	//	'}';
	public ExplorateurElements getExplorateurAccess() {
		return pExplorateur;
	}
	
	public ParserRule getExplorateurRule() {
		return getExplorateurAccess().getRule();
	}
	
	//Lieu:
	//	'lieu' name=ID '{'
	//	descriptions+=Description? ('objets' objets+=[Objet])* ('connaissances' connaissances+=[Connaissance])* ('personnes'
	//	personnes+=[Personne])*
	//	'}';
	public LieuElements getLieuAccess() {
		return pLieu;
	}
	
	public ParserRule getLieuRule() {
		return getLieuAccess().getRule();
	}
	
	//enum Visibilite:
	//	Visible='visible'
	//	| Invisible='invisible';
	public VisibiliteElements getVisibiliteAccess() {
		return eVisibilite;
	}
	
	public EnumRule getVisibiliteRule() {
		return getVisibiliteAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
